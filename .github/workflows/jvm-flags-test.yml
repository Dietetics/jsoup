# .github/workflows/jvm-flags-test.yml
name: JVM Flags Test

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test-with-flags:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest
        java:
          - 8
          - 17
          - 21
        jvm_flag:
          - "-XX:+UseG1GC"
          - "-XX:+PrintGCDetails"
          - "-XX:MaxHeapSize=512m"
          - "-XX:+UnlockExperimentalVMOptions"
          - "-XX:ConcGCThreads=2"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      - name: Set JVM Flag
        run: echo "MAVEN_OPTS=${{ matrix.jvm_flag }}" >> $GITHUB_ENV

      - name: Run tests with Maven
        run: mvn clean test

      - name: Run tests with JaCoCo
        run: mvn clean verify

      - name: Copy JaCoCo report
        run: cp target/site/jacoco/index.html .


      - name: Upload Test Coverage Report
        if: always()
        run: |
          # Utilisez une commande pour générer un rapport de couverture (par exemple avec JaCoCo)
          mvn jacoco:report
          # Enregistrez le rapport de couverture pour chaque flag
          cp target/site/jacoco/index.html coverage-report-${{ matrix.jvm_flag }}.html
        # Vous pouvez utiliser actions/upload-artifact pour sauvegarder les rapports
